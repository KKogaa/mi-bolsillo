{
    "swagger": "2.0",
    "info": {
        "description": "API for managing bills and expenses with multi-currency support",
        "title": "Mi Bolsillo API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "support@mibolsillo.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/bills": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all bills with their associated expenses for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bills"
                ],
                "summary": "List all bills for the authenticated user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of bills with expenses",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.BillWithExpensesResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "User ID not found in context",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve bills",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new bill with associated expenses for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bills"
                ],
                "summary": "Create a new bill with expenses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Bill and expenses data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateBillWithExpensesRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "bill and expenses created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "User ID not found in context",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to create bill with expenses",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/bills/upload": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Uploads a photo of a bill, parses it using Grok API, and creates a bill with expenses",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bills"
                ],
                "summary": "Upload a bill photo and parse it",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Bill photo (JPEG, PNG, or other image format)",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "bill and expenses created successfully from image",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request or image",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "User ID not found in context",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to process image or create bill",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/bills/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a bill with its associated expenses by ID for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bills"
                ],
                "summary": "Get a specific bill by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bill ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bill with expenses",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bill ID is required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "User ID not found in context",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to this bill",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve bill",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a bill and its associated expenses by ID for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bills"
                ],
                "summary": "Delete a bill by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bill ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bill and associated expenses deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bill ID is required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "User ID not found in context",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to this bill",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to delete bill",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/telegram/webhook": {
            "post": {
                "description": "Receives and processes updates from Telegram bot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "telegram"
                ],
                "summary": "Handle Telegram webhook",
                "parameters": [
                    {
                        "description": "Telegram update",
                        "name": "update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/telegram.Update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.BillWithExpensesResponse": {
            "type": "object",
            "properties": {
                "amountPen": {
                    "type": "number",
                    "example": 95.75
                },
                "amountUsd": {
                    "type": "number",
                    "example": 25.5
                },
                "billId": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "category": {
                    "type": "string",
                    "example": "Food"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2025-10-10T10:00:00Z"
                },
                "currency": {
                    "type": "string",
                    "example": "USD"
                },
                "date": {
                    "type": "string",
                    "example": "2025-10-10T10:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Grocery shopping"
                },
                "expenses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Expense"
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2025-10-10T10:00:00Z"
                },
                "userId": {
                    "type": "string",
                    "example": "user_123456789"
                }
            }
        },
        "dtos.CreateBillWithExpensesRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "example": "Food"
                },
                "currency": {
                    "type": "string",
                    "example": "USD"
                },
                "date": {
                    "type": "string",
                    "example": "2025-10-10T10:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Grocery shopping"
                },
                "exchangeRate": {
                    "type": "number",
                    "example": 3.75
                },
                "expenses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_adapters_inbound_handlers_dtos.CreateExpenseForBill"
                    }
                }
            }
        },
        "entities.Expense": {
            "type": "object",
            "properties": {
                "amountPen": {
                    "type": "number",
                    "example": 95.75
                },
                "amountUsd": {
                    "type": "number",
                    "example": 25.5
                },
                "billId": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "category": {
                    "type": "string",
                    "example": "Fruits"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2025-10-10T10:00:00Z"
                },
                "currency": {
                    "type": "string",
                    "example": "USD"
                },
                "date": {
                    "type": "string",
                    "example": "2025-10-10"
                },
                "description": {
                    "type": "string",
                    "example": "Apples"
                },
                "exchangeRate": {
                    "type": "number",
                    "example": 3.75
                },
                "expenseId": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174001"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2025-10-10T10:00:00Z"
                },
                "userId": {
                    "type": "string",
                    "example": "user_123456789"
                }
            }
        },
        "internal_adapters_inbound_handlers_dtos.CreateExpenseForBill": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 25.5
                },
                "category": {
                    "type": "string",
                    "example": "Fruits"
                },
                "date": {
                    "type": "string",
                    "example": "2025-10-10"
                },
                "description": {
                    "type": "string",
                    "example": "Apples"
                }
            }
        },
        "telegram.Chat": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "telegram.Message": {
            "type": "object",
            "properties": {
                "chat": {
                    "$ref": "#/definitions/telegram.Chat"
                },
                "date": {
                    "type": "integer"
                },
                "from": {
                    "$ref": "#/definitions/telegram.User"
                },
                "message_id": {
                    "type": "integer"
                },
                "photo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/telegram.Photo"
                    }
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "telegram.Photo": {
            "type": "object",
            "properties": {
                "file_id": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "file_unique_id": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "telegram.Update": {
            "type": "object",
            "properties": {
                "message": {
                    "$ref": "#/definitions/telegram.Message"
                },
                "update_id": {
                    "type": "integer"
                }
            }
        },
        "telegram.User": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_bot": {
                    "type": "boolean"
                },
                "language_code": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and the JWT token from Clerk authentication",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}